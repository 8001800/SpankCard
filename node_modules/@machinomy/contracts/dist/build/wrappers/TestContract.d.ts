import * as BigNumber from 'bignumber.js';
import * as Web3 from 'web3';
import * as truffle from 'truffle-contract';
export declare namespace TestContract {
    const ARTIFACT: any;
    interface Contract {
        address: string;
        constructor: {
            web3: Web3;
        };
        nonce: {
            (): Promise<BigNumber.BigNumber>;
            call(): Promise<BigNumber.BigNumber>;
        };
        updateNonce: {
            (_nonce: BigNumber.BigNumber, options?: Web3.CallData): Promise<truffle.TransactionResult>;
            call(_nonce: BigNumber.BigNumber, options?: Web3.CallData): Promise<void>;
            estimateGas(_nonce: BigNumber.BigNumber): Promise<number>;
            request(_nonce: BigNumber.BigNumber): {
                method: string;
                params: [{
                    to: string;
                    data: string;
                }];
            };
        };
        send: (value: BigNumber.BigNumber | number) => Promise<truffle.TransactionResult>;
        sendTransaction: (opts: Web3.CallData) => Promise<truffle.TransactionResult>;
    }
    interface DidUpdate {
        nonce: BigNumber.BigNumber;
    }
    function isDidUpdateEvent(something: truffle.AnyTransactionEvent): something is truffle.TransactionEvent<DidUpdate>;
    function contract(provider?: Web3.Provider, defaults?: Web3.CallData): truffle.TruffleContract<Contract>;
}
export default TestContract;
