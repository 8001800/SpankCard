import * as BigNumber from 'bignumber.js';
import * as Web3 from 'web3';
import * as truffle from 'truffle-contract';
export declare namespace UnidirectionalCF {
    const ARTIFACT: any;
    interface Contract {
        address: string;
        constructor: {
            web3: Web3;
        };
        canSettle: {
            (): Promise<boolean>;
            call(): Promise<boolean>;
        };
        canWithdraw: {
            (payment: BigNumber.BigNumber, origin: string, signature: string): Promise<boolean>;
            call(payment: BigNumber.BigNumber, origin: string, signature: string): Promise<boolean>;
        };
        isSettling: {
            (): Promise<boolean>;
            call(): Promise<boolean>;
        };
        isOpen: {
            (): Promise<boolean>;
            call(): Promise<boolean>;
        };
        paymentDigest: {
            (payment: BigNumber.BigNumber): Promise<string>;
            call(payment: BigNumber.BigNumber): Promise<string>;
        };
        settle: {
            (options?: Web3.CallData): Promise<truffle.TransactionResult>;
            call(options?: Web3.CallData): Promise<void>;
            estimateGas(): Promise<number>;
            request(): {
                method: string;
                params: [{
                    to: string;
                    data: string;
                }];
            };
        };
        withdraw: {
            (payment: BigNumber.BigNumber, signature: string, options?: Web3.CallData): Promise<truffle.TransactionResult>;
            call(payment: BigNumber.BigNumber, signature: string, options?: Web3.CallData): Promise<void>;
            estimateGas(payment: BigNumber.BigNumber, signature: string): Promise<number>;
            request(payment: BigNumber.BigNumber, signature: string): {
                method: string;
                params: [{
                    to: string;
                    data: string;
                }];
            };
        };
        send: (value: BigNumber.BigNumber | number) => Promise<truffle.TransactionResult>;
        sendTransaction: (opts: Web3.CallData) => Promise<truffle.TransactionResult>;
    }
    function contract(provider?: Web3.Provider, defaults?: Web3.CallData): truffle.TruffleContract<Contract>;
}
export default UnidirectionalCF;
